{
	"name": "dataflow1",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "DS_ADLS_tsv",
						"type": "DatasetReference"
					},
					"name": "source1"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "DS_Snowflake",
						"type": "DatasetReference"
					},
					"name": "sink1"
				}
			],
			"transformations": [
				{
					"name": "derivedColumn1"
				},
				{
					"name": "flatten1"
				}
			],
			"scriptLines": [
				"source(output(",
				"          {Inspection ID} as integer,",
				"          {DBA Name} as string,",
				"          {AKA Name} as string,",
				"          {License #} as double,",
				"          {Facility Type} as string,",
				"          Risk as string,",
				"          Address as string,",
				"          City as string,",
				"          State as string,",
				"          Zip as double,",
				"          {Inspection Date} as date,",
				"          {Inspection Type} as string,",
				"          Results as string,",
				"          Violations as string,",
				"          Latitude as double,",
				"          Longitude as double,",
				"          Location as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> source1",
				"source1 derive(Violations = split(",
				"  trim(",
				"    replace(",
				"      replace(",
				"        replace(",
				"          replace(",
				"            replace(",
				"              replace(",
				"                replace(",
				"                  trim(Violations),",
				"                  '\"\"\"', '\"'),",
				"                '\\t', ''),",
				"              '\\r', ''),",
				"            '\\n', ' '),",
				"          '||', '|'),",
				"        ' |', '|'),",
				"      '| ', '|')",
				"  ),",
				"  '|'",
				")",
				") ~> derivedColumn1",
				"derivedColumn1 foldDown(unroll(Violations),",
				"     mapColumn(",
				"          {Inspection ID},",
				"          {DBA Name},",
				"          {AKA Name},",
				"          {License #},",
				"          {Facility Type},",
				"          Risk,",
				"          Address,",
				"          City,",
				"          State,",
				"          Zip,",
				"          {Inspection Date},",
				"          {Inspection Type},",
				"          Results,",
				"          Violations,",
				"          Latitude,",
				"          Longitude,",
				"          Location",
				"     ),",
				"     skipDuplicateMapInputs: false,",
				"     skipDuplicateMapOutputs: false) ~> flatten1",
				"flatten1 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     deletable:false,",
				"     insertable:true,",
				"     updateable:false,",
				"     upsertable:false,",
				"     format: 'table',",
				"     stageInsert: true,",
				"     mapColumn(",
				"          INSPECTION_ID = {Inspection ID},",
				"          DBA_NAME = {DBA Name},",
				"          AKA_NAME = {AKA Name},",
				"          LICENSE_NO = {License #},",
				"          FACILITY_TYPE = {Facility Type},",
				"          RISK = Risk,",
				"          ADDRESS = Address,",
				"          CITY = City,",
				"          STATE = State,",
				"          ZIP = Zip,",
				"          INSPECTION_DATE = {Inspection Date},",
				"          INSPECTION_TYPE = {Inspection Type},",
				"          RESULTS = Results,",
				"          VIOLATIONS = Violations,",
				"          LATITUDE = Latitude,",
				"          LONGITUDE = Longitude,",
				"          LOCATION = Location",
				"     )) ~> sink1"
			]
		}
	}
}